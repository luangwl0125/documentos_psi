import streamlit as st
import datetime
import logging
import time
import re
from docx import Document
from io import BytesIO
from PyPDF2 import PdfReader
from PIL import Image
import pytesseract
import openai
import tempfile
import os

import os
openai.api_key = os.getenv("OPENAI_API_KEY")

logging.basicConfig(level=logging.INFO)
openai.api_key = st.secrets["OPENAI_API_KEY"]
ASSISTANT_ID = "asst_AM7Evj3dYgIhdzTQX0BOe0E6"

# Defini√ß√µes das op√ß√µes para os campos
OPCOES_FINALIDADE_DECLARACAO = [
    "Selecionar",
    "Comprova√ß√£o de comparecimento a atendimento psicol√≥gico em determinada data e hor√°rio",
    "Comprova√ß√£o de acompanhamento psicol√≥gico em andamento",
    "Justificativa de aus√™ncia escolar por motivo de comparecimento a atendimento psicol√≥gico",
    "Justificativa de aus√™ncia laboral por motivo de comparecimento a atendimento psicol√≥gico",
    "Comprova√ß√£o de atendimento psicol√≥gico domiciliar realizado em localidade espec√≠fica",
    "Atendimento psicol√≥gico no contexto de acompanhamento judicial ou institucional",
    "Participa√ß√£o em atividade psicol√≥gica vinculada a grupos terap√™uticos, oficinas ou atendimentos em grupo",
    "Acompanhamento de familiar em sess√£o psicol√≥gica",
    "Encaminhamento externo para unidade de sa√∫de, CRAS, CREAS, CAPS, etc",
    "Participa√ß√£o em avalia√ß√£o psicol√≥gica agendada ou em curso",
    "Outros (especificar)"
]

OPCOES_FINALIDADE_ATESTADO = [
    "Selecionar",
    "Manuseio de arma de fogo (porte/posse)",
    "Dire√ß√£o de ve√≠culo automotor (cnh)",
    "Aptid√£o para exerc√≠cio de fun√ß√£o p√∫blica ou privada",
    "Participa√ß√£o em concursos p√∫blicos",
    "Ingresso ou perman√™ncia em institui√ß√µes educativas",
    "Habilita√ß√£o para ado√ß√£o, guarda ou tutela",
    "Atividades esportivas, militares, entre outras",
    "Solicitar afastamento ou dispensa",
    "Comprovar a presen√ßa de condi√ß√£o psicol√≥gica espec√≠fica",
    "Subsidiar encaminhamentos para servi√ßos de sa√∫de, assist√™ncia ou justi√ßa",
    "Atestar condi√ß√£o de vulnerabilidade ps√≠quica ou emocional",
    "Responder demandas espec√≠ficas de autoridades ou institui√ß√µes"
]

OPCOES_FINALIDADE_RELATORIO = [
    "Selecionar",
    "Acompanhamento terap√™utico (cl√≠nico individual ou em grupo)",
    "Encaminhamento para outros profissionais ou servi√ßos (m√©dicos, pedag√≥gicos, assistenciais)",
    "Solicita√ß√£o de benef√≠cios sociais ou previdenci√°rios (como BPC, aux√≠lio-doen√ßa)",
    "Acompanhamento escolar ou inclus√£o educacional",
    "Demanda judicial (ex: guarda de filhos, avalia√ß√£o de v√≠nculos familiares, medidas protetivas)",
    "Acompanhamento em medidas socioeducativas",
    "Monitoramento de evolu√ß√£o em tratamentos psicol√≥gicos",
    "Solicita√ß√£o de transfer√™ncia institucional (escolas, abrigos, unidades terap√™uticas)",
    "Reintegra√ß√£o familiar ou social",
    "Necessidade de adapta√ß√£o curricular ou inclus√£o",
    "Registro de atendimento em institui√ß√µes de acolhimento (CRAS, CREAS, CAPS, abrigos, etc.)",
    "Orienta√ß√µes para continuidade do cuidado psicol√≥gico",
    "Participa√ß√£o em programa de reabilita√ß√£o psicossocial",
    "Solicita√ß√£o de avalia√ß√£o de compet√™ncias parentais",
    "Solicita√ß√£o de avalia√ß√£o da din√¢mica familiar ou conjugal",
    "Avalia√ß√£o do impacto psicol√≥gico de eventos traum√°ticos",
    "Requerimento de revis√£o de medidas protetivas",
    "Documenta√ß√£o para processos administrativos internos (ex: escolas, empresas)",
    "Demanda institucional para avalia√ß√£o de adapta√ß√£o e comportamento",
    "Relato de atua√ß√£o em programas de promo√ß√£o de sa√∫de mental"
]

OPCOES_DEMANDA_RELATORIO = [
    "Selecionar",
    "üë®‚Äçüë©‚Äçüëß Cl√≠nica / Atendimento Individual",
    "Queixas de ansiedade, depress√£o ou ang√∫stia existencial",
    "Dificuldades nos relacionamentos interpessoais",
    "Processos de luto ou separa√ß√£o",
    "Transtornos alimentares ou de imagem corporal",
    "Queixas de baixa autoestima e inseguran√ßa",
    "Demandas para avalia√ß√£o de autoconhecimento e desenvolvimento pessoal",
    "Elabora√ß√£o de traumas psicol√≥gicos",
    "üéì Escolar / Educacional",
    "Dificuldades de aprendizagem ou desempenho acad√™mico",
    "Comportamento disruptivo em sala de aula",
    "Queixas de bullying ou exclus√£o social",
    "Necessidade de adapta√ß√£o curricular ou inclus√£o escolar",
    "Avalia√ß√£o de maturidade escolar",
    "üßë‚Äç‚öñÔ∏è Psicologia Jur√≠dica",
    "Avalia√ß√£o de v√≠nculos afetivos entre crian√ßa e respons√°veis",
    "Processos de disputa de guarda ou aliena√ß√£o parental",
    "Encaminhamento judicial para avalia√ß√£o de condi√ß√µes parentais",
    "Medidas protetivas em contexto de viol√™ncia dom√©stica",
    "Acompanhamento de adolescentes em cumprimento de medidas socioeducativas",
    "üß† Sa√∫de Mental e Psicossocial",
    "Acompanhamento de pacientes com transtornos mentais severos e persistentes",
    "Avalia√ß√£o de riscos psicossociais (idea√ß√£o suicida, autoles√£o, etc.)",
    "Reintegra√ß√£o social ap√≥s interna√ß√£o psiqui√°trica",
    "Suporte psicol√≥gico em contextos de viol√™ncia, abuso ou neglig√™ncia",
    "üëî Organizacional / Institucional",
    "Avalia√ß√£o de clima organizacional e rela√ß√µes no trabalho",
    "Demandas de readapta√ß√£o ou retorno ao trabalho",
    "Conflitos interpessoais entre funcion√°rios",
    "Avalia√ß√£o de condi√ß√µes emocionais para o desempenho laboral",
    "üè† Servi√ßos de Prote√ß√£o Social / Institucional",
    "Acompanhamento de crian√ßas e adolescentes em acolhimento institucional",
    "Situa√ß√µes de vulnerabilidade social e familiar",
    "Encaminhamentos por √≥rg√£os como CRAS, CREAS, CAPS",
    "Necessidade de inclus√£o em programas de assist√™ncia ou pol√≠ticas p√∫blicas"
]

OPCOES_PROCEDIMENTOS_RELATORIO = [
    "Selecionar",
    "üó£Ô∏è Entrevistas",
    "Entrevista inicial (acolhimento)",
    "Entrevista psicol√≥gica individual",
    "Entrevista devolutiva",
    "Entrevista com familiares ou respons√°veis",
    "Entrevista com equipe t√©cnica ou pedag√≥gica (quando em contexto institucional)",
    "üìã Observa√ß√µes",
    "Observa√ß√£o comportamental em contexto cl√≠nico",
    "Observa√ß√£o em ambiente institucional (escola, abrigo, trabalho)",
    "Registros sistem√°ticos de conduta (an√°lise funcional)",
    "üìö Instrumentos T√©cnicos",
    "Aplica√ß√£o de testes psicol√≥gicos reconhecidos pelo SATEPSI (ex.: WISC, Bender, R1, etc.)",
    "Invent√°rios de sintomas (ex.: BDI, STAI)",
    "Question√°rios sociodemogr√°ficos ou de rastreio",
    "Escalas de avalia√ß√£o (ex.: Vineland, SNAP-IV, CBCL)",
    "üß† Procedimentos de Avalia√ß√£o Psicol√≥gica",
    "Anamnese detalhada",
    "Avalia√ß√£o de habilidades cognitivas",
    "Avalia√ß√£o de aspectos emocionais e afetivos",
    "Avalia√ß√£o de aspectos relacionais e sociais",
    "Avalia√ß√£o da din√¢mica familiar",
    "Avalia√ß√£o de potencial de aprendizagem ou funcionamento adaptativo",
    "üßæ Revis√£o e An√°lise Documental",
    "An√°lise de relat√≥rios m√©dicos ou educacionais",
    "Estudo de prontu√°rios psicol√≥gicos anteriores",
    "Levantamento hist√≥rico de atendimentos",
    "üßë‚Äçü§ù‚Äçüßë Participa√ß√£o em Atividades / Din√¢micas",
    "Din√¢micas de grupo",
    "Oficinas terap√™uticas",
    "Rodas de conversa ou grupos de acolhimento",
    "üíº Outros Procedimentos Contextuais",
    "Visitas domiciliares (quando autorizadas)",
    "Interlocu√ß√£o com institui√ß√µes externas (CRAS, CREAS, CAPS)",
    "Reuni√µes de equipe t√©cnica"
]

OPCOES_PROCEDIMENTOS_LAUDO = [
    "Selecionar",
    "Entrevista com os respons√°veis",
    "Entrevista com a professora",
    "Entrevista cl√≠nica semiestruturada",
    "Observa√ß√£o comportamental direta durante os atendimentos",
    "Observa√ß√£o direta em contexto cl√≠nico e l√∫dico",
    "An√°lise de relat√≥rios escolares e comportamentais fornecidos pela escola",
    "Aplica√ß√£o de instrumentos padronizados",
    "Aplica√ß√£o de instrumentos complementares"
]

OPCOES_FINALIDADE_PARECER = [
    "Selecionar",
    "Esclarecimento t√©cnico sobre capacidades parentais (ex: guarda, conviv√™ncia familiar, aliena√ß√£o parental)",
    "An√°lise t√©cnica de documentos psicol√≥gicos emitidos por terceiros (ex: contralaudo ou impugna√ß√£o)",
    "Opini√£o t√©cnica sobre poss√≠vel necessidade de curatela ou interdi√ß√£o civil",
    "Verifica√ß√£o de ind√≠cios de viola√ß√£o de direitos (ex: neglig√™ncia, abuso, abandono afetivo)",
    "Subsidiar decis√µes do Judici√°rio em medidas protetivas ou acolhimento institucional",
    "Opinar sobre a capacidade de compreens√£o e participa√ß√£o de um r√©u/processado",
    "Orientar tecnicamente quanto √† indica√ß√£o de guarda compartilhada ou unilateral",
    "An√°lise de conflitos familiares complexos em disputa judicial",
    "Apoiar decis√µes sobre interna√ß√£o involunt√°ria ou compuls√≥ria",
    "Fundamentar a necessidade de encaminhamento psiqui√°trico ou multiprofissional",
    "Orientar a equipe sobre progn√≥stico de funcionalidade ps√≠quica de usu√°rios cr√¥nicos",
    "Parecer sobre a ader√™ncia ao tratamento psicol√≥gico/psiqui√°trico",
    "Responder tecnicamente sobre a necessidade de inclus√£o em programas de prote√ß√£o social",
    "Opinar sobre benef√≠cios assistenciais (ex: BPC-LOAS, isen√ß√£o de imposto, aposentadoria) por condi√ß√£o ps√≠quica",
    "Subsidiar encaminhamentos √† rede de educa√ß√£o inclusiva, CRAS, CREAS, CAPS, Conselho Tutelar",
    "Apontar a necessidade de acolhimento institucional de crian√ßas, adolescentes ou idosos",
    "Parecer sobre necessidades educacionais especiais e adapta√ß√µes pedag√≥gicas",
    "Verifica√ß√£o de sofrimento ps√≠quico em contexto escolar (ex: bullying, ansiedade, fobia escolar)",
    "Apoio t√©cnico sobre poss√≠vel evas√£o escolar por motivo ps√≠quico-comportamental",
    "Orienta√ß√£o sobre medidas protetivas para crian√ßas e adolescentes em risco no ambiente escolar",
    "Esclarecimento sobre uso de instrumentos psicol√≥gicos em avalia√ß√£o espec√≠fica (ex: validade de teste)",
    "Apoiar decis√µes t√©cnicas em per√≠cias sociais, avalia√ß√µes multiprofissionais e programas institucionais",
    "Parecer para esclarecimento √©tico em contextos que envolvam condutas ou pr√°ticas psicol√≥gicas contestadas"
]

OPCOES_OBJETIVOS_PARECER = [
    "Selecionar",
    "Esclarecer a capacidade civil de pessoa maior de idade em situa√ß√£o de poss√≠vel vulnerabilidade ps√≠quica",
    "Analisar a fun√ß√£o parental de um ou ambos os respons√°veis legais em disputas de guarda",
    "Apontar ind√≠cios de aliena√ß√£o parental ou preju√≠zo no v√≠nculo afetivo entre genitor e crian√ßa/adolescente",
    "Verificar a idoneidade emocional e relacional de respons√°vel legal em a√ß√µes de tutela ou curatela",
    "Analisar tecnicamente os efeitos psicol√≥gicos da conviv√™ncia com familiares acusados de viol√™ncia",
    "Fornecer subs√≠dios t√©cnicos em processos de revis√£o de medidas socioeducativas ou protetivas",
    "Avaliar a adequa√ß√£o de retorno ao conv√≠vio familiar ap√≥s acolhimento institucional",
    "Fundamentar decis√µes judiciais quanto √† necessidade de encaminhamentos √† rede de sa√∫de mental",
    "Analisar documentos psicol√≥gicos apresentados nos autos e emitir parecer t√©cnico sobre sua validade e coer√™ncia t√©cnica (ex: contesta√ß√£o ou valida√ß√£o de laudos e relat√≥rios)",
    "Emitir opini√£o t√©cnica em processos de ado√ß√£o ou destitui√ß√£o do poder familiar",
    "Avaliar a ader√™ncia ou resist√™ncia ao tratamento psicol√≥gico ou psiqui√°trico",
    "Verificar a presen√ßa de sinais de sofrimento ps√≠quico grave, sugerindo encaminhamentos adequados",
    "Analisar a necessidade de interna√ß√£o involunt√°ria sob o ponto de vista √©tico-t√©cnico",
    "Esclarecer os poss√≠veis efeitos emocionais de depend√™ncia qu√≠mica e comorbidades ps√≠quicas em familiares e conviventes",
    "Compreender a din√¢mica familiar conflituosa e seu impacto psicol√≥gico sobre crian√ßas, adolescentes ou idosos",
    "Identificar fatores de risco psicossociais em contextos de neglig√™ncia, abandono ou viol√™ncia",
    "Verificar a presen√ßa de recursos de suporte e prote√ß√£o familiar",
    "Apontar a viabilidade de encaminhamento para rede de prote√ß√£o (CRAS, CREAS, CAPS, etc.)",
    "Emitir parecer sobre necessidade de suporte educacional especial ou media√ß√£o pedag√≥gica",
    "Verificar a influ√™ncia de fatores emocionais e familiares no desempenho escolar e no comportamento de crian√ßas/adolescentes",
    "Analisar os impactos psicol√≥gicos de viol√™ncia escolar ou exclus√£o social",
    "Orientar quanto √† necessidade de encaminhamentos psicopedag√≥gicos ou multidisciplinares",
    "Emitir parecer sobre a adequa√ß√£o de metodologia, validade e coer√™ncia interna de documentos psicol√≥gicos",
    "Responder a questionamentos de √≥rg√£os p√∫blicos sobre documentos j√° emitidos",
    "Fundamentar tecnicamente decis√µes intersetoriais no √¢mbito da sa√∫de, justi√ßa e assist√™ncia social",
    "Oferecer subs√≠dio √† atua√ß√£o t√©cnica da equipe multiprofissional da institui√ß√£o solicitante"
]

OPCOES_GENERO = ["Selecionar", "Masculino", "Feminino", "Outro", "Prefere n√£o informar"]

OPCOES_ESCOLARIDADE = [
    "Selecionar",
    "Sem instru√ß√£o",
    "Ensino Fundamental Incompleto",
    "Ensino Fundamental Completo",
    "Ensino M√©dio Incompleto",
    "Ensino M√©dio Completo",
    "Ensino T√©cnico",
    "Ensino Superior Incompleto",
    "Ensino Superior Completo",
    "P√≥s-gradua√ß√£o (Lato Sensu)",
    "Mestrado",
    "Doutorado"
]

OPCOES_PROFISSAO = [
    "Selecionar",
    "Estudante",
    "Desempregado",
    "Aut√¥nomo",
    "Empregado com carteira assinada",
    "Servidor p√∫blico",
    "Aposentado",
    "Empres√°rio",
    "Profissional liberal",
    "Dona(o) de casa",
    "Outro"
]

OPCOES_ESTADO_CIVIL = [
    "Selecionar",
    "Solteiro(a)",
    "Casado(a)",
    "Uni√£o est√°vel",
    "Separado(a) judicialmente",
    "Divorciado(a)",
    "Vi√∫vo(a)"
]

TEXTO_ANALISE = """Irei coletar, interpretar e analisar os dados provenientes de todos os procedimentos utilizados, integrando as informa√ß√µes de forma criteriosa para apresentar os achados da avalia√ß√£o psicol√≥gica de maneira descritiva. Essa apresenta√ß√£o contempla: Aspectos emocionais, cognitivos, sociais e comportamentais, articulando-os com os resultados obtidos por meio dos instrumentos psicol√≥gicos aplicados."""

TEXTO_CONCLUSAO = """Apresentarei a s√≠ntese dos achados da avalia√ß√£o psicol√≥gica, com base nos procedimentos realizados, nos dados obtidos por meio dos instrumentos aplicados e nas demais t√©cnicas empregadas. Caso os resultados permitam, poder√£o ser inclu√≠das hip√≥teses diagn√≥sticas fundamentadas nos crit√©rios do CID-11 ou do DSM-5-TR, bem como indicadas interven√ß√µes, encaminhamentos ou outras medidas pertinentes, de acordo com as evid√™ncias cl√≠nicas observadas."""

TEXTO_ATESTADO_OBSERVACOES = """Este Atestado Psicol√≥gico possui car√°ter sigiloso, foi emitido exclusivamente para a finalidade aqui declarada e n√£o dever√° ser utilizado para quaisquer outros fins que n√£o aqueles expressamente indicados. Ressalta-se que se trata de documento extrajudicial, elaborado conforme os princ√≠pios t√©cnicos e √©ticos da Psicologia, em especial os dispostos no C√≥digo de √âtica Profissional do Psic√≥logo e na Resolu√ß√£o CFP n¬∫ 06/2019."""

def extrair_texto_arquivo(file):
    try:
        if file.type == "application/pdf":
            reader = PdfReader(file)
            texto = "\n".join(page.extract_text() or "" for page in reader.pages)
            return texto.strip() or "[PDF sem texto detect√°vel]"
        elif file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
            doc = Document(file)
            texto = "\n".join([p.text for p in doc.paragraphs])
            return texto.strip() or "[DOCX sem texto detect√°vel]"
        elif file.type.startswith("image/"):
            image = Image.open(file)
            texto = pytesseract.image_to_string(image, lang="por")
            return texto.strip() or "[Imagem sem texto detect√°vel]"
        else:
            return f"[Tipo de arquivo n√£o suportado: {file.type}]"
    except Exception as e:
        logging.error(f"Erro ao extrair texto de {file.name}: {e}")
        return f"[Erro ao extrair texto: {e}]"

def sanitize_filename(filename):
    return re.sub(r'[^a-zA-Z0-9_\-\.]', '_', filename)

def obter_campos_por_tipo_documento(tipo):
    estrutura = {
        "DECLARA√á√ÉO PSICOL√ìGICA": [
            "NOME DO(A) PACIENTE",
            "DATA DE NASCIMENTO",
            "FINALIDADE",
            "LOCAL DO(S) ATENDIMENTO(S)",
            "DATA(S) E HOR√ÅRIO(S) DO(S) ATENDIMENTO(S)",
            "DURA√á√ÉO DO ACOMPANHAMENTO PSICOL√ìGICO"
        ],
        "ATESTADO PSICOL√ìGICO": [
            "NOME DA PESSOA OU INSTITUI√á√ÉO ATENDIDA",
            "DATA DE NASCIMENTO (opcional)",
            "IDADE (opcional)",
            "G√äNERO (opcional)",
            "ESCOLARIDADE (opcional)",
            "PROFISS√ÉO (opcional)",
            "ESTADO CIVIL (opcional)",
            "SOLICITANTE",
            "FINALIDADE",
            "DESCRI√á√ÉO DAS CONDI√á√ïES PSICOL√ìGICAS",
            "CID OU OUTRAS CLASSIFICA√á√ïES DIAGN√ìSTICAS (opcional)",
            "LOCAL DA AVALIA√á√ÉO",
            "DATA DA EMISS√ÉO",
            "PSIC√ìLOGO RESPONS√ÅVEL",
            "OBSERVA√á√ïES"
        ],
        "RELAT√ìRIO PSICOL√ìGICO": [
            "NOME DA PESSOA OU INSTITUI√á√ÉO ATENDIDA",
            "SOLICITANTE",
            "DATA",
            "LOCAL",
            "FINALIDADE DO DOCUMENTO",
            "DESCRI√á√ÉO DA DEMANDA",
            "PROCEDIMENTOS UTILIZADOS",
            "OBSERVA√á√ïES CL√çNICAS",
            "AN√ÅLISE",
            "CONCLUS√ÉO",
            "REFER√äNCIAS"
        ],
        "LAUDO PSICOL√ìGICO": [
            "NOME DO(A) PACIENTE",
            "DATA DE NASCIMENTO",
            "IDADE",
            "G√äNERO",
            "ESCOLARIDADE",
            "PROFISS√ÉO",
            "ESTADO CIVIL",
            "SOLICITANTE",
            "QUAL FOI O OBJETIVO DA SOLICITA√á√ÉO",
            "QUEIXA PRINCIPAL",
            "O SEU ENDERE√áO PROFISSIONAL",
            "DATA DA AVALIA√á√ÉO",
            "LOCAL DA AVALIA√á√ÉO",
            "PROCEDIMENTOS",
            "OBSERVA√á√ïES CL√çNICAS",
            "AN√ÅLISE",
            "CONCLUS√ÉO",
            "REFER√äNCIAS"
        ],
        "PARECER PSICOL√ìGICO": [
            "NOME DA PESSOA OU INSTITUI√á√ÉO ATENDIDA",
            "DATA DE NASCIMENTO",
            "IDADE",
            "G√äNERO",
            "SOLICITANTE",
            "FINALIDADE DO DOCUMENTO",
            "OBJETIVOS DA CONSULTA/DEMANDA PARA PARECER PSICOL√ìGICO",
            "AN√ÅLISE",
            "CONCLUS√ÉO",
            "REFER√äNCIAS"
        ]
    }
    return estrutura.get(tipo, [])

def gerar_campo_comum(campo, tipo_campo="texto", opcoes=None, key=None):
    """Fun√ß√£o auxiliar para gerar campos comuns"""
    safe_key = key or re.sub(r'[^a-zA-Z0-9_]', '_', campo)
    
    if tipo_campo == "texto":
        return st.text_input(campo, key=f"input_{safe_key}")
    elif tipo_campo == "data":
        return st.date_input(campo, format="DD/MM/YYYY", key=f"date_{safe_key}")
    elif tipo_campo == "numero":
        return st.number_input(campo, min_value=0, max_value=120, step=1, key=f"number_{safe_key}")
    elif tipo_campo == "selecao":
        return st.selectbox(campo, opcoes, key=f"select_{safe_key}")
    elif tipo_campo == "multiselecao":
        return st.multiselect(campo, opcoes, key=f"multiselect_{safe_key}")
    elif tipo_campo == "texto_area":
        return st.text_area(campo, key=f"textarea_{safe_key}")

def gerar_campos_dinamicos(campos, tipo_documento):
    respostas = {}

    for campo in campos:
        safe_key = re.sub(r'[^a-zA-Z0-9_]', '_', campo)
        
        # Campos comuns a v√°rios documentos
        if campo in ["NOME DO(A) PACIENTE", "NOME DA PESSOA OU INSTITUI√á√ÉO ATENDIDA", "SOLICITANTE", 
                    "LOCAL DA AVALIA√á√ÉO", "LOCAL DO(S) ATENDIMENTO(S)", "DURA√á√ÉO DO ACOMPANHAMENTO PSICOL√ìGICO",
                    "CID OU OUTRAS CLASSIFICA√á√ïES DIAGN√ìSTICAS (opcional)", "QUAL FOI O OBJETIVO DA SOLICITA√á√ÉO",
                    "QUEIXA PRINCIPAL", "O SEU ENDERE√áO PROFISSIONAL"]:
            respostas[campo] = gerar_campo_comum(campo, "texto", key=f"{tipo_documento}_{safe_key}")
        
        elif campo in ["DATA DE NASCIMENTO", "DATA DE NASCIMENTO (opcional)", "DATA DA AVALIA√á√ÉO", "DATA DA EMISS√ÉO", "DATA"]:
            respostas[campo] = gerar_campo_comum(campo, "data", key=f"{tipo_documento}_{safe_key}")
        
        elif campo in ["IDADE", "IDADE (opcional)"]:
            respostas[campo] = gerar_campo_comum(campo, "numero", key=f"{tipo_documento}_{safe_key}")
        
        elif campo in ["G√äNERO", "G√äNERO (opcional)"]:
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_GENERO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo in ["ESCOLARIDADE", "ESCOLARIDADE (opcional)"]:
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_ESCOLARIDADE, key=f"{tipo_documento}_{safe_key}")
        
        elif campo in ["PROFISS√ÉO", "PROFISS√ÉO (opcional)"]:
            profissao = gerar_campo_comum(campo, "selecao", OPCOES_PROFISSAO, key=f"{tipo_documento}_{safe_key}")
            if profissao == "Outro":
                profissao_outro = st.text_input("Especifique a profiss√£o", key=f"{tipo_documento}_{safe_key}_outro")
                respostas[campo] = f"Outro: {profissao_outro}" if profissao_outro else "Outro"
            else:
                respostas[campo] = profissao
        
        elif campo in ["ESTADO CIVIL", "ESTADO CIVIL (opcional)"]:
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_ESTADO_CIVIL, key=f"{tipo_documento}_{safe_key}")
        
        # Campos espec√≠ficos por tipo de documento
        elif campo == "FINALIDADE" and tipo_documento == "DECLARA√á√ÉO PSICOL√ìGICA":
            finalidade = gerar_campo_comum(campo, "selecao", OPCOES_FINALIDADE_DECLARACAO, key=f"{tipo_documento}_{safe_key}")
            if finalidade == "Outros (especificar)":
                finalidade_outro = st.text_input("Especifique a finalidade", key=f"{tipo_documento}_{safe_key}_outro")
                respostas[campo] = f"Outros: {finalidade_outro}" if finalidade_outro else "Outros"
            else:
                respostas[campo] = finalidade
        
        elif campo == "FINALIDADE" and tipo_documento == "ATESTADO PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_FINALIDADE_ATESTADO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "FINALIDADE DO DOCUMENTO" and tipo_documento == "RELAT√ìRIO PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_FINALIDADE_RELATORIO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "DESCRI√á√ÉO DA DEMANDA" and tipo_documento == "RELAT√ìRIO PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_DEMANDA_RELATORIO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "PROCEDIMENTOS UTILIZADOS" and tipo_documento == "RELAT√ìRIO PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "multiselecao", OPCOES_PROCEDIMENTOS_RELATORIO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "PROCEDIMENTOS" and tipo_documento == "LAUDO PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "multiselecao", OPCOES_PROCEDIMENTOS_LAUDO, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "FINALIDADE DO DOCUMENTO" and tipo_documento == "PARECER PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_FINALIDADE_PARECER, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "OBJETIVOS DA CONSULTA/DEMANDA PARA PARECER PSICOL√ìGICO":
            respostas[campo] = gerar_campo_comum(campo, "selecao", OPCOES_OBJETIVOS_PARECER, key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "DATA(S) E HOR√ÅRIO(S) DO(S) ATENDIMENTO(S)":
            st.markdown(f"**{campo}**")
            num_datas = st.number_input("Quantos atendimentos deseja registrar?", min_value=1, max_value=10, value=1, key=f"{tipo_documento}_{safe_key}_num")
            datas_horarios = []
            
            for i in range(num_datas):
                st.markdown(f"Atendimento {i+1}")
                col1, col2, col3 = st.columns(3)
                with col1:
                    data = st.date_input(f"Data {i+1}", key=f"{tipo_documento}_{safe_key}_data_{i}", format="DD/MM/YYYY")
                with col2:
                    hora_inicio = st.time_input(f"Hor√°rio de in√≠cio {i+1}", key=f"{tipo_documento}_{safe_key}_inicio_{i}")
                with col3:
                    hora_fim = st.time_input(f"Hor√°rio de fim {i+1}", key=f"{tipo_documento}_{safe_key}_fim_{i}")
                datas_horarios.append({
                    "data": data,
                    "inicio": hora_inicio,
                    "fim": hora_fim
                })
            respostas[campo] = datas_horarios
        
        elif campo == "DESCRI√á√ÉO DAS CONDI√á√ïES PSICOL√ìGICAS":
            st.markdown("**DESCRI√á√ÉO DAS CONDI√á√ïES PSICOL√ìGICAS**")
            st.info("Por favor, descreva as informa√ß√µes sobre o estado psicol√≥gico do(a) benefici√°rio(a), conforme identificadas no processo de avalia√ß√£o psicol√≥gica, de forma compat√≠vel com a finalidade deste atestado. Se preferir, voc√™ pode anexar o relat√≥rio ou laudo psicol√≥gico correspondente, e eu fa√ßo a an√°lise para redigir as condi√ß√µes psicol√≥gicas adequadas √† emiss√£o do documento.")
            respostas[campo] = gerar_campo_comum(campo, "texto_area", key=f"{tipo_documento}_{safe_key}")
            arquivos_condicoes = st.file_uploader("Anexar relat√≥rio ou laudo psicol√≥gico", accept_multiple_files=True, key=f"{tipo_documento}_{safe_key}_files")
            if arquivos_condicoes:
                textos_anexos = [extrair_texto_arquivo(f) for f in arquivos_condicoes]
                respostas[f"{campo}_ANEXOS"] = textos_anexos
        
        elif campo == "OBSERVA√á√ïES CL√çNICAS":
            respostas[campo] = gerar_campo_comum(campo, "texto_area", key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "AN√ÅLISE":
            st.markdown("**AN√ÅLISE**")
            st.info(TEXTO_ANALISE)
            respostas[campo] = gerar_campo_comum("VOC√ä GOSTARIA DE FAZER ALGUMA OBSERVA√á√ÉO?", "texto_area", key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "CONCLUS√ÉO":
            st.markdown("**CONCLUS√ÉO**")
            st.info(TEXTO_CONCLUSAO)
            respostas[campo] = gerar_campo_comum("VOC√ä GOSTARIA DE FAZER ALGUMA OBSERVA√á√ÉO?", "texto_area", key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "REFER√äNCIAS":
            st.markdown("**REFER√äNCIAS**")
            respostas[campo] = gerar_campo_comum("Voc√™ gostaria de fornecer alguma observa√ß√£o?", "texto_area", key=f"{tipo_documento}_{safe_key}")
        
        elif campo == "OBSERVA√á√ïES":
            st.markdown("**OBSERVA√á√ïES**")
            st.info(TEXTO_ATESTADO_OBSERVACOES)
            respostas[campo] = TEXTO_ATESTADO_OBSERVACOES
        
        elif campo == "PSIC√ìLOGO RESPONS√ÅVEL":
            respostas[campo] = f"{nome} - CRP: {numero}" if nome and numero else ""

    st.markdown("---")
    st.markdown("**Documentos Complementares**")
    arquivos = st.file_uploader("Anexar arquivo(s) complementares", accept_multiple_files=True, key=f"{tipo_documento}_complementares")

    return respostas, arquivos

def enviar_para_assistente(user_message):
    try:
        thread = openai.beta.threads.create()
        openai.beta.threads.messages.create(thread_id=thread.id, role="user", content=user_message)
        run = openai.beta.threads.runs.create(thread_id=thread.id, assistant_id=ASSISTANT_ID)
        while True:
            run = openai.beta.threads.runs.retrieve(thread_id=thread.id, run_id=run.id)
            if run.status == "completed":
                break
            time.sleep(1)
        messages_list = openai.beta.threads.messages.list(thread_id=thread.id)
        for msg in reversed(messages_list.data):
            if msg.role == "assistant":
                return msg.content[0].text.value
        return "[Resposta n√£o encontrada]"
    except Exception as e:
        logging.error(f"Erro na API Assistants: {e}")
        return f"[Erro ao interagir com o assistente: {e}]"

def exportar_para_docx(texto):
    doc = Document()
    for paragrafo in texto.split("\n"):
        doc.add_paragraph(paragrafo.strip())
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer

# Janela de aceite de termos
if 'accepted_terms' not in st.session_state:
    st.session_state.accepted_terms = False

if not st.session_state.accepted_terms:
    st.title("Termos de Uso e Pol√≠tica de Privacidade")
    st.markdown("""
    üõ°Ô∏è **Compromisso com a √âtica, Seguran√ßa e Sigilo Profissional**
                
    Este servi√ßo foi desenvolvido como ferramenta de apoio t√©cnico √† elabora√ß√£o de documentos psicol√≥gicos, com base nas diretrizes estabelecidas pela **Resolu√ß√£o CFP n¬∫ 06/2019**, pela **Resolu√ß√£o CFP n¬∫ 01/2009 (Pol√≠tica de Prote√ß√£o de Dados)** e pelo **C√≥digo de √âtica Profissional do Psic√≥logo**.

                
    üß† **Responsabilidade T√©cnica e √âtica**  
    As produ√ß√µes dos documentos devem **obrigatoriamente ser revisadas, validadas e assinadas por psic√≥loga(o) devidamente inscrita(o) no CRP**, conforme determina a legisla√ß√£o profissional.  
    O conte√∫do gerado **n√£o substitui o julgamento cl√≠nico e t√©cnico do profissional**.

                
    üìå **Finalidade do Sistema**  
    Este assistente virtual tem como √∫nico prop√≥sito **auxiliar a(o) psic√≥loga(o)** na sistematiza√ß√£o de informa√ß√µes, organiza√ß√£o textual e conformidade estrutural de documentos, sempre respeitando os princ√≠pios de autonomia, consentimento informado, sigilo, n√£o exposi√ß√£o e √©tica nas rela√ß√µes profissionais.
                

    ‚öñÔ∏è **Refer√™ncias Normativas**
    - Resolu√ß√£o CFP n¬∫ 06/2019 ‚Äì Elabora√ß√£o de Documentos Escritos Produzidos pela(o) Psic√≥loga(o)
    - C√≥digo de √âtica Profissional do Psic√≥logo ‚Äì Artigos 1¬∫, 9¬∫, 13¬∫ e 14¬∫
    - Resolu√ß√£o CFP n¬∫ 11/2018 ‚Äì Sobre uso de tecnologias da informa√ß√£o e comunica√ß√£o
    - LGPD (Lei Geral de Prote√ß√£o de Dados) ‚Äì Aplicabilidade ao contexto psicol√≥gico
                

    üîí **Privacidade e Prote√ß√£o de Dados**  
    - Esta ferramenta foi constru√≠da em conformidade com:
    - O C√≥digo de √âtica do Profissional Psic√≥logo (Resolu√ß√£o CFP n¬∫ 010/2005);
    - A Resolu√ß√£o CFP n¬∫ 06/2019: Elabora√ß√£o de Documentos Escritos Produzidos pela(o) Psic√≥loga(o);
    - Resolu√ß√£o CFP n¬∫ 11/2018: Sobre uso de tecnologias da informa√ß√£o e comunica√ß√£o
    - Criptografia em tr√¢nsito (HTTPS): Criptografia de Ponta a Ponta para Proteger Dados em Tr√¢nsito e em Repouso. Todos os dados s√£o protegidos contra intercepta√ß√£o.
    - Controle de acesso: APIs protegidas com autentica√ß√£o para impedir acesso n√£o autorizado.
    - Valida√ß√£o de entrada: Valida√ß√µes autom√°ticas, evitando inje√ß√µes maliciosas ou erros l√≥gicos.
    - Registros e auditoria: Rastreamento de dados com precis√£o (data/hora e autor), ajudando na responsabiliza√ß√£o e conformidade com normas como a LGPD.
    - Anonimiza√ß√£o: Omiss√£o de dados sens√≠veis antes de armazenar ou compartilhar informa√ß√µes JSON, promovendo privacidade.
    - Normas da Lei Geral de Prote√ß√£o de Dados Pessoais (Lei n¬∫ 13.709/2018), que regula o tratamento de dados pessoais no Brasil. Seu objetivo principal √© garantir o direito √† privacidade e √† prote√ß√£o dos dados dos cidad√£os, estabelecendo regras claras sobre coleta, uso, armazenamento e compartilhamento de informa√ß√µes pessoais por empresas, √≥rg√£os p√∫blicos e profissionais aut√¥nomos incluindo psic√≥logas(os).
                
    Ao utilizar este sistema, voc√™ declara ci√™ncia de que **respeita e segue os preceitos √©ticos da profiss√£o** e que **assume a responsabilidade t√©cnica e legal pelos documentos emitidos** com o apoio desta ferramenta.)
    """)

    if st.button("Aceito os Termos e Continuar"):
        st.session_state.accepted_terms = True
    else:
        st.stop()

st.header("üß† Psic√≥logo Assistente / Elabora√ß√£o de Documentos üß†", divider="gray")
nome = st.text_input("SEU NOME COMPLETO")
numero = st.text_input("CRP")
data = st.text_input("DATA")
if nome and numero:
    st.success(f"Bem-vindo(a), {nome}! | CRP: {numero}")

st.markdown("---")
tipo_documento = st.selectbox("Tipo de Documento", [
    "DECLARA√á√ÉO PSICOL√ìGICA",
    "ATESTADO PSICOL√ìGICO",
    "RELAT√ìRIO PSICOL√ìGICO",
    "LAUDO PSICOL√ìGICO",
    "PARECER PSICOL√ìGICO"
])

st.markdown("---")
campos = obter_campos_por_tipo_documento(tipo_documento)
respostas, arquivos = gerar_campos_dinamicos(campos, tipo_documento)

enviar = st.button("üîç Gerar Documento")
if enviar:
    conteudo = f"Tipo de Documento: {tipo_documento}\n\n"
    
    # Adiciona as respostas dos campos
    for campo in campos:
        if campo == "PROCEDIMENTOS UTILIZADOS" or campo == "PROCEDIMENTOS":
            conteudo += "PROCEDIMENTOS:\n"
            if respostas[campo]:
                for proc in respostas[campo]:
                    conteudo += f"- {proc}\n"
            conteudo += "\n"
        elif campo == "DATA(S) E HOR√ÅRIO(S) DO(S) ATENDIMENTO(S)":
            conteudo += f"{campo}:\n"
            for atendimento in respostas[campo]:
                data_formatada = atendimento["data"].strftime("%d/%m/%Y")
                inicio_formatado = atendimento["inicio"].strftime("%H:%M")
                fim_formatado = atendimento["fim"].strftime("%H:%M")
                conteudo += f"- {data_formatada} das {inicio_formatado} √†s {fim_formatado}\n"
            conteudo += "\n"
        elif campo in ["DATA DE NASCIMENTO", "DATA DE NASCIMENTO (opcional)", "DATA DA AVALIA√á√ÉO", "DATA DA EMISS√ÉO", "DATA"]:
            valor = respostas[campo]
            if valor:
                data_formatada = valor.strftime("%d/%m/%Y")
                conteudo += f"{campo}: {data_formatada}\n\n"
        elif campo == "DESCRI√á√ÉO DAS CONDI√á√ïES PSICOL√ìGICAS":
            conteudo += f"{campo}:\n{respostas[campo]}\n\n"
            if f"{campo}_ANEXOS" in respostas:
                conteudo += "DOCUMENTOS ANEXADOS √Ä DESCRI√á√ÉO:\n"
                for texto in respostas[f"{campo}_ANEXOS"]:
                    conteudo += f"{texto}\n\n"
        else:
            valor = respostas[campo]
            if valor and valor != "Selecionar":  # S√≥ adiciona o campo se tiver algum valor e n√£o for "Selecionar"
                conteudo += f"{campo}:\n{valor}\n\n"
    
    # Adiciona o conte√∫do dos arquivos anexados
    if arquivos:
        conteudo += "DOCUMENTOS COMPLEMENTARES:\n"
        textos_extraidos = [extrair_texto_arquivo(f) for f in arquivos]
        conteudo += "\n\n".join(textos_extraidos)

    resposta = enviar_para_assistente(conteudo)
    st.subheader("üìÑ Documento Gerado")
    st.text_area("Conte√∫do", resposta, height=400)
    buffer = exportar_para_docx(resposta)
    st.download_button("üì• Baixar DOCX", data=buffer, file_name=f"{sanitize_filename(tipo_documento)}.docx", mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document")
    st.info("üîç Este documento deve ser revisado pelo psic√≥logo respons√°vel antes do uso oficial.")



